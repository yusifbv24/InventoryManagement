@model List<DepartmentViewModel>

<div class="container-fluid px-4 py-3">
    <!-- Header with breadcrumb and button -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">Department Management</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item active">Departments</li>
                </ol>
            </nav>
        </div>
        <a asp-action="Create" class="btn btn-primary btn-icon">
            <i class="fas fa-plus me-2"></i>Add Department
        </a>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-primary shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Departments</h6>
                            <h3 class="mb-0">@Model.Count</h3>
                        </div>
                        <div class="icon-shape bg-primary-soft text-primary rounded-3">
                            <i class="fas fa-building fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-success shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Active</h6>
                            <h3 class="mb-0 text-success">@Model.Count(d => d.IsActive)</h3>
                        </div>
                        <div class="icon-shape bg-success-soft text-success rounded-3">
                            <i class="fas fa-check-circle fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-secondary shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Inactive</h6>
                            <h3 class="mb-0 text-secondary">@Model.Count(d => !d.IsActive)</h3>
                        </div>
                        <div class="icon-shape bg-secondary-soft text-secondary rounded-3">
                            <i class="fas fa-times-circle fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-info shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">With Products</h6>
                            <h3 class="mb-0">@Model.Sum(d => d.ProductCount)</h3>
                        </div>
                        <div class="icon-shape bg-info-soft text-info rounded-3">
                            <i class="fas fa-boxes fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body p-3">
            <div class="row g-3 align-items-center">
                <div class="col-lg-4 col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-transparent border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-start-0"
                               placeholder="Search departments...">
                    </div>
                </div>

                <div class="col-lg-2 col-md-6">
                    <select id="statusFilter" class="form-select">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>

                <div class="col-lg-3 col-md-6">
                    <select id="sortBy" class="form-select">
                        <option value="name">Sort by Name</option>
                        <option value="products">Sort by Products</option>
                        <option value="workers">Sort by Workers</option>
                        <option value="created">Sort by Date</option>
                    </select>
                </div>

                <div class="col-lg-3 col-md-6">
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-secondary flex-grow-1" onclick="resetFilters()">
                            <i class="fas fa-redo me-1"></i>Reset
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Departments Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-white border-bottom-0 py-3">
            <div class="row align-items-center">
                <div class="col-auto">
                    <button class="btn btn-sm btn-outline-secondary" onclick="exportDepartmentsToPDF()">
                        <i class="fas fa-file-pdf me-1"></i> Export PDF
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="text-center" style="width: 300px;">Department</th>
                            <th class="text-center" style="width: 30%;">Description</th>
                            <th class="text-center" style="width: 100px;">Products</th>
                            <th class="text-center" style="width: 100px;">Workers</th>
                            <th class="text-center" style="width: 100px;">Status</th>
                            <th class="text-center" style="width: 100px;">Created</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="departmentsTable">
                        @foreach (var department in Model)
                        {
                            <tr class="department-item"
                                data-name="@department.Name.ToLower()"
                                data-status="@(department.IsActive ? "active" : "inactive")"
                                data-products="@department.ProductCount"
                                data-workers="@department.WorkerCount"
                                data-created="@department.CreatedAt.Ticks">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="icon-shape bg-light text-primary rounded-2 p-2 me-3">
                                            <i class="fas fa-building"></i>
                                        </div>
                                        <div>
                                            <div class="fw-semibold">@department.Name</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="text-truncate" style="max-width: 400px;" title="@department.Description">
                                        @(string.IsNullOrEmpty(department.Description) ? "No description" :
                                         (department.Description.Length > 100 ? department.Description.Substring(0, 100) + "..." : department.Description))
                                    </div>
                                </td>
                                <td class="text-center">
                                    <span class="badge bg-primary rounded-pill px-3 py-2">
                                        @department.ProductCount
                                    </span>
                                </td>
                                <td class="text-center">
                                    <span class="badge bg-info rounded-pill px-3 py-2">
                                        @department.WorkerCount
                                    </span>
                                </td>
                                <td>
                                    @if (department.IsActive)
                                    {
                                        <span class="badge bg-success-soft text-success py-2 px-3">
                                            <i class="fas fa-check-circle me-1"></i>Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary-soft text-secondary py-2 px-3">
                                            <i class="fas fa-times-circle me-1"></i>Inactive
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="text-muted small">
                                        @department.CreatedAt.ToString("MMM dd, yyyy")
                                    </div>
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@department.Id"
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@department.Id"
                                           class="btn btn-sm btn-outline-primary rounded-3 px-3">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger rounded-3 px-3"
                                                onclick="deleteDepartment(@department.Id, '@department.Name')">
                                            <i class="fas fa-trash me-1"></i>Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Empty State -->
            <div id="noResults" class="text-center py-5" style="display: none;">
                <div class="py-5">
                    <i class="fas fa-search fa-3x text-muted mb-4"></i>
                    <h5 class="text-muted">No departments found</h5>
                    <p class="text-muted">Try adjusting your search or filter criteria</p>
                    <button class="btn btn-outline-primary mt-2" onclick="resetFilters()">
                        <i class="fas fa-redo me-1"></i>Reset Filters
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong class="text-danger" id="departmentName"></strong>?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    This will permanently delete the department and affect associated products.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/pdf-export.js"></script>
    <script>
        let allDepartments = [];

        $(document).ready(function() {
            // Store all departments
            allDepartments = $('.department-item').toArray();

            // Search functionality
            $('#searchInput').on('input', function() {
                filterDepartments();
            });

            // Filter functionality
            $('#statusFilter, #sortBy').on('change', function() {
                filterDepartments();
            });
        });

        function filterDepartments() {
            const searchTerm = $('#searchInput').val().toLowerCase().trim();
            const statusFilter = $('#statusFilter').val();
            const sortBy = $('#sortBy').val();

            let visibleItems = allDepartments.filter(item => {
                const $item = $(item);
                // Fixed: Ensure data-name exists and search properly
                const nameData = $item.attr('data-name') || '';
                const nameText = $item.find('.fw-semibold').text().toLowerCase();
                const descriptionText = $item.find('.text-truncate').text().toLowerCase();

                const matchesSearch = searchTerm === '' ||
                    nameData.includes(searchTerm) ||
                    nameText.includes(searchTerm) ||
                    descriptionText.includes(searchTerm);

                const matchesStatus = statusFilter === '' ||
                    $item.attr('data-status') === statusFilter;

                return matchesSearch && matchesStatus;
            });

            // Sort items
            visibleItems.sort((a, b) => {
                const $a = $(a);
                const $b = $(b);

                switch(sortBy) {
                    case 'name':
                        // String comparison for names
                        return $a.data('name').toString().localeCompare($b.data('name').toString());
                    case 'products':
                        // Convert to numbers explicitly for proper numerical comparison
                        const aProducts = parseInt($a.data('products')) || 0;
                        const bProducts = parseInt($b.data('products')) || 0;
                        return bProducts - aProducts; // Descending order (highest first)
                    case 'workers':
                        const aWorkers=parseInt($a.data('workers')) || 0;
                        const bWorkers=parseInt($b.data('workers')) || 0;
                        return bWorkers - aWorkers;
                    case 'created':
                        // Convert to numbers for date comparison (ticks)
                        const aCreated = parseInt($a.data('created')) || 0;
                        const bCreated = parseInt($b.data('created')) || 0;
                        return bCreated - aCreated; // Descending order (newest first)
                    default:
                        return 0;
                }
            });

            // Clear and rebuild the table body
            const $tbody = $('#departmentsTable');
            $tbody.empty();

            // Append sorted items
            visibleItems.forEach(item => {
                $tbody.append(item);
            });

            // Show/hide the table and empty state
            $('.table-responsive').toggle(visibleItems.length > 0);
            $('#noResults').toggle(visibleItems.length === 0);
        }

        function resetFilters() {
            $('#searchInput').val('');
            $('#statusFilter').val('');
            $('#sortBy').val('name');
            filterDepartments();
        }

        function deleteDepartment(id, name) {
            $('#departmentName').text(name);
            $('#deleteForm').attr('action', '/Departments/Delete/' + id);
            $('#deleteModal').modal('show');
        }
    </script>

    <style>
        .card {
            border-radius: 12px;
            border: none;
        }

        .border-start-3 {
            border-left: 3px solid !important;
        }

        .icon-shape {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .bg-primary-soft {
            background-color: rgba(13, 110, 253, 0.1) !important;
        }

        .bg-success-soft {
            background-color: rgba(25, 135, 84, 0.1) !important;
        }

        .bg-secondary-soft {
            background-color: rgba(108, 117, 125, 0.1) !important;
        }

        .bg-info-soft {
            background-color: rgba(13, 202, 240, 0.1) !important;
        }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
            border-bottom: 2px solid #e9ecef;
        }

        .table tr {
            transition: all 0.2s ease;
        }

            .table tr:hover {
                background-color: rgba(248, 249, 250, 0.8);
                transform: translateY(-1px);
                box-shadow: 0 4px 6px rgba(0,0,0,0.03);
            }

        .table > tbody > tr:last-child > td {
            border-bottom: none;
        }

        .table td {
            vertical-align: middle;
            padding: 1.2rem 1rem;
        }
    </style>
}